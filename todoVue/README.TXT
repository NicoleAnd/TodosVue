案例 todoMVC
  参考官网  todomvc.com
  
   任务未完成状态对应class为空
   任务完成。。。。。class="completed"
   任务编辑状态。。。。。。。editing
  # 数据列表渲染
     有数据
     无数据   
  # 添加任务
     数据不能为空
     按回车输入的任务添加到任务列表中
     输入文本框清空
  #  标记所有任务完成或所有未完成  

  # 任务项
      1 切换任务完成状态 
           当选中任务标题左侧的复选框 加上completed样式 
             .....................没有选中 要移除
      2 删除单个任务项

      3 双击label进入编辑模式

  # 删除所有已完成任务

  # 显示所有未完成任务数  

  计算属性
      computed:{
         leftNum: function(){
            // 本质方法
         }
      }
      // 当属性调用 原生js支持语法
      {{leftNum}} // 计算属性 依赖data中的数据进行缓存
      
      {{leftNum()}} // methods 定义的普通方法

   # 编辑任务项   
       编辑文本框 双击自动获取焦点（未完成）
       在编辑文本框中输入非空数据按回车或失去焦点自动保存
                    输入空数据按回车或失去焦点直接删除该项
                    输入过程中按esc键 取消编辑模式 并不保存
   # 筛选数据
       完成all/active/completed切换功能 

   MVVM思想 数据驱动视图
      new Vue({
         el:"#app",
         data:{
            // 非方法的数据 视图用到的数据定义在这里
         },
         methods: {
            // 方法 不能与data中同名
            // 事件处理函数 模板渲染函数 其他功能性函数
         },
         computed:{

         }
      });

      自定义指令
      常用指令 {{}} v-if v-show v-else  v-else-if
            v-for
            v-on
            :class="{类名:布尔值}"